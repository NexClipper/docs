(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{211:function(e,t,n){"use strict";n.d(t,"a",(function(){return b}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),u=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},p=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=u(n),b=r,d=p["".concat(o,".").concat(b)]||p[b]||m[b]||i;return n?a.a.createElement(d,c(c({ref:t},s),{},{components:n})):a.a.createElement(d,c({ref:t},s))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var s=2;s<i;s++)o[s]=n[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},86:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return u}));var r=n(3),a=n(7),i=(n(0),n(211)),o={id:"requirements_instance",title:"Requirements at Instances",hide_title:!0,description:null},c={unversionedId:"requirements_instance",id:"requirements_instance",isDocsHomePage:!1,title:"Requirements at Instances",description:"Minimum Requirements",source:"@site/docs/requirements_instance.md",slug:"/requirements_instance",permalink:"/docs/requirements_instance",editUrl:"https://github.com/NexClipper/docs/edit/master/docs/requirements_instance.md",version:"current",sidebar:"someSidebar",previous:{title:"Requirements at Kubernetes",permalink:"/docs/requirements"},next:{title:"Health Dashboard",permalink:"/docs/health"}},l=[{value:"Minimum Requirements",id:"minimum-requirements",children:[]},{value:"Check Environment",id:"check-environment",children:[]}],s={toc:l};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.a)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.a)("h2",{id:"minimum-requirements"},"Minimum Requirements"),Object(i.a)("p",null,"NexClipper runs in a Linux environment."),Object(i.a)("ul",null,Object(i.a)("li",{parentName:"ul"},"Operating Systems : Linux(WSL included), MacOS 10.14+"),Object(i.a)("li",{parentName:"ul"},"Software",Object(i.a)("ul",{parentName:"li"},Object(i.a)("li",{parentName:"ul"},"bash or zsh"),Object(i.a)("li",{parentName:"ul"},"curl"),Object(i.a)("li",{parentName:"ul"},"ssh-keygen"))),Object(i.a)("li",{parentName:"ul"},"Target Kubernetes Cluster : 1.15.12 or higher"),Object(i.a)("li",{parentName:"ul"},"Firewall",Object(i.a)("ul",{parentName:"li"},Object(i.a)("li",{parentName:"ul"},"Client(WebService) -> Outbound (Destination : console.nexclipper.io, Port: 80,443,8080)"),Object(i.a)("li",{parentName:"ul"},"NexClipper Agent(DaemonSet) -> Outbount (Destination : console.nexclipper.io, Port: 8090)")))),Object(i.a)("hr",null),Object(i.a)("h2",{id:"check-environment"},"Check Environment"),Object(i.a)("p",null,"There are two options for installation.  "),Object(i.a)("ol",null,Object(i.a)("li",{parentName:"ol"},"Remote Kubernetes",Object(i.a)("ul",{parentName:"li"},Object(i.a)("li",{parentName:"ul"},"An environment that can communicate remotely to kube-apiserve (kubeconfig environment)"))),Object(i.a)("li",{parentName:"ol"},"Local Kubernetes",Object(i.a)("ul",{parentName:"li"},Object(i.a)("li",{parentName:"ul"},"When running locally, such as Docker Desktop, Minikube, K3s, MicroK8s, etc.")))),Object(i.a)("p",null,"Run the following command to check the currently connected cluster in an environment that can run bash or zsh. If you have configured your Kubernetes environment with docker-desktop, you are expected to get results similar to the following:"),Object(i.a)("pre",null,Object(i.a)("code",{parentName:"pre",className:"language-bash"},"$ kubectl cluster-info\nKubernetes master is running at https://kubernetes.docker.internal:6443\nKubeDNS is running at https://kubernetes.docker.internal:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy\n")),Object(i.a)("div",{className:"admonition admonition-caution alert alert--warning"},Object(i.a)("div",{parentName:"div",className:"admonition-heading"},Object(i.a)("h5",{parentName:"div"},Object(i.a)("span",{parentName:"h5",className:"admonition-icon"},Object(i.a)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},Object(i.a)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),Object(i.a)("div",{parentName:"div",className:"admonition-content"},Object(i.a)("p",{parentName:"div"},"You might encounter problems if you install duplicates with an existing operating Prometheus Operator. NexClipper distributes and manages Prometheus-related ecosystem based on Helm."))))}u.isMDXComponent=!0}}]);